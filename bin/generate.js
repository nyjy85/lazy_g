var Promise = require('bluebird');
var path = require('path');
var chalk = require('chalk');
var ncp = Promise.promisify(require('ncp').ncp);
var rename = Promise.promisify(require('fs').rename);

var newProjectDir = process.cwd();
var generatorFilesPath = path.join(__dirname, '../generated');

var copyFiles = function () {
    return ncp(generatorFilesPath, newProjectDir);
}

// you don't want gitignore.txt to be treated as a real gitignore until the app is generated by user
var renameGitignore = function () {
    var oldPath = path.join(newProjectDir, 'gitignore.txt');
    var newPath = path.join(newProjectDir, '.gitignore');
    return rename(oldPath, newPath);
};

console.log(chalk.green('Generating your lazy G app.'));
console.log(chalk.green('You\'ll be up and running in no time!'));

copyFiles()  
.then(renameGitignore)
.then(function () {
    console.log(chalk.green('Lazy G is ready!'));
    console.log(chalk.yellow('Run the following commands to get set up:'));
    console.log(chalk.white.bgBlack('- [Terminal 1] npm install '));
    console.log(chalk.white.bgBlack('- [Terminal 1] If you haven\'t already: npm install -g http-server   '));
    console.log(chalk.white.bgBlack('- [Terminal 1] http-server   '));
})
.catch(function(err) {
    console.log(err);
});